Although many features can be available in an application, features are normally not enabled by default.
Application code can enable features for specific user roles and/or tenants.

{code}
Long tenant = grails.crm.core.TenantUtils.tenant
String role = "VIP_ROLE"
crmFeatureService.enableFeature("awesome", role, tenant)
{code}

You can also make it possible for system administrators to enable features on-demand,
this is however application specific and can be implemented with code like above.

h2. Check if feature is enabled

{code}
Long tenant = grails.crm.core.TenantUtils.tenant
if(crmFeatureService.hasFeature("awesome", null, tenant)) {
    // The "awesome" feature is installed and enabled for all roles, great!
}
{code}

h2. Get metadata for a feature

Each feature provide a set of [metadata|guide:feature-metadata] properties.

{code}
Map metadata = crmFeatureService.getFeature("awesome");
assert metadata.description == "This feature is awesome"

// null is returned if the feature is not installed
assert crmFeatureService.getFeature("not installed") == null
{code}

{note}
You can read metadata for a feature even though the feature is not enabled.
{note}